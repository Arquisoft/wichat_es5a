openapi: 3.0.0
info:
  title: Gatewayservice API
  description: Gateway OpenAPI specification.
  version: 0.2.0
servers:
  - url: http://localhost:8000
    description: Development server
  - url: http://SOMEIP:8000
    description: Production server
paths:
  /adduser:
    post:
      summary: Add a new user to the database.
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                email:
                  type: string
                  description: User email.
                  example: student@gmail.com
                password:
                  type: string
                  description: User password.
                  example: pass
                confirmPassword:
                  type: string
                  description: Confirmation of the user password.
                  example: pass
      responses:
        '200':
          description: User added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY3NTZkYjNmYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw
                  _id:
                    type: string
                    description: Identification
                    example: 65f756db3fa22d227a4b7c7d
                  username:
                    type: string
                    description: Username
                    example: student
                  email:
                    type: string
                    description: User email.
                    example: student@gmail.com
                  password:
                    type: string
                    description: Hashed password
                    example: $2b$10$ZKdNYLWFQxzt5Rei/YTc/OsZNi12YiWz30JeUFHNdAt7MyfmkTuvC
                  points:
                    type: integer
                    description: Points of the user.
                    example: 0
                  contests:
                    type: array
                    description: List of contests associated with the user.
                    items:
                      type: string
                      example: ['65f756db3fa22d227a4b7c7d', '65f756db3fa22d227a4b7c7e']
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
        '400':
          description: Failed to add user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: La contraseña debe tener al menos 7 caracteres, uno de ellos mayúscula y otro un número
  /health:
    get:
      summary: Check the health status of the service.
      operationId: checkHealth
      responses:
        '200':
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Health status.
                    example: OK
  /login:
    post:
      summary: Log in to the system.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass 
      responses:
        '200':
          description: Login successful. Returns user token, username, and creation date.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY3NTZkYjNmYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw
                  username:
                    type: string
                    description: Username.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: '2024-03-17T20:47:23.935Z'
        '401':
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Shows the error info.
                    example: Invalid credentials
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /savegame: 
    post:
      summary: Saves a game and its questions in the database.
      operationId: saveGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  type: string
                  description: Mode of the game.
                  example: 'flag'
                difficulty:
                  type: string
                  description: Difficulty of the game.
                  example: 'easy'
                arCorrect:
                  type: array
                  description: Array which contains if the answer was answered correctly or not.
                  items:
                    type: boolean
                  example: [1, 0, 1, 1, 0]
                points:
                  type: integer
                  description: Points gained in the game.
                  example: 500
                arPreg:
                  type: array
                  description: Array which contains the information about the questions included in the game.
                  items:
                    type: string
                  example: ["question1", "question2"]
                arTiempo:
                  type: array
                  description: Array which contains the time taken to answer each question.
                  items:
                    type: integer
                  example: [2, 4, 7, 1, 3]
                arPistas:
                  type: array
                  description: Array which contains the number of hints used in each question.
                  items:
                    type: integer
                  example: [0, 1, 0, 2, 0]
                username:
                  type: string
                  description: Username of the user who played the game.
                  example: student
      responses:
        '200':
          description: Game saved successfully. Returns true, stating that the operation was successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Success status.
                    example: true
                  id:
                    type: string
                    description: ID of the saved game.
                    example: 65f756db3fa22d227a4b7c7d
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /gethistory:
    get:
      summary: Retrieves all contests currently on the database.
      operationId: getHistory
      responses:
        '200':
          description: Contests retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCount:
                    type: integer
                    description: Number of users registered all time in the database.
                    example: 185
                  questionCount:
                    type: integer
                    description: Number of questions generated and saved all time in the database.
                    example: 1657
                  contests:
                    type: array
                    description: List of contests saved all time in the database.
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Contest ID.
                          example: 65f756db3fa22d227a4b7c7d
                        difficulty:
                          type: string
                          description: Difficulty of the game.
                          example: 'easy'
                        mode:
                          type: string
                          description: Mode of the game.
                          example: 'flag'
                        rightAnswers:
                          type: array
                          description: Array which contains if the answer was answered correctly or not for every question included in the game.
                          items:
                            type: boolean
                          example: [true, false, true, true, false]
                        points:
                          type: integer
                          description: Points gained in the game.
                          example: 500
                        preguntas:
                          type: array
                          description: Array which contains the ids of the questions included in the game.
                          items:
                            type: string
                          example: ['67e4a171206740a957c5988e','67e4a171206740a957c59890','67e4a171206740a957c59892']
                        tiempos:
                          type: array
                          description: Array which contains the time taken to answer each question.
                          items:
                            type: integer
                          example: [2, 4, 7, 1, 3]
                        pistas:
                          type: array
                          description: Array which contains the number of hints used in each question.
                          items:
                            type: integer
                          example: [0, 1, 0, 2, 0]
                        date:
                          type: string
                          description: Date of the contest.
                          example: '2025-03-27T00:53:05.578+00:00'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /getquestions/:id:
    get:
      summary: Retrieves all questions from a specific contest and the information related to them.
      operationId: getQuestions
      parameters:
        - name: id
          in: path
          description: Contest ID.
          required: true
          schema:
            type: string
          example: 65f756db3fa22d227a4b7c7d
      responses:
        '200':
          description: Questions retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  questions:
                    type: array
                    description: List of questions included in the contest.
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Question ID.
                          example: 67e4a171206740a957c5988e
                        question:
                          type: string
                          description: Question text.
                          example: 'question-flag'
                        image:
                          type: string
                          description: Image URL.
                          example: 'http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Mali.svg'
                        answer:
                          type: string
                          description: Correct answer.
                          example: 'Madrid'
                        wrongAnswers:
                          type: array
                          description: Array which contains the possible answers for the question.
                          items:
                            type: string
                          example: ['Madrid', 'Barcelona', 'Seville', 'Valencia']
                        createdAt:
                          type: string
                          description: date of creation.
                          example: 2025-03-26T23:17:52.776+00:00
                  correctAnswers:
                    type: array
                    description: Array which contains if the answer was answered correctly or not for every question included in the game.
                    items:
                      type: boolean
                    example: [true, false, true, true, false]
                  times:
                    type: array
                    description: Array which contains the time taken to answer each question.
                    items:
                      type: integer
                    example: [2, 4, 7, 1, 3]
                  clues:
                    type: array
                    description: Array which contains the number of hints used in each question.
                    items:
                      type: integer
                    example: [0, 1, 0, 2, 0]
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /profile:
    get:
      summary: Retrieves the profile of the authenticated user.
      operationId: getProfile
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: >
            Bearer token for authentication. Format: `Bearer <token>`.
          example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMjM0NTY3ODkwIiwidXNlcm5hbWUiOiJzdHVkZW50IiwiaWF0IjoxNjE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      responses:
        '200':
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Username of the authenticated user.
                    example: student
                  email:
                    type: string
                    description: Email of the authenticated user.
                    example: student@example.com
        '401':
          description: Unauthorized. The user is not authenticated or the token is invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Unauthorized
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: User not found
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Internal server error
  /askllm:
    post:
      summary: Sends a question to the LLM and retrieves a hint based on the provided context.
      operationId: askLLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: The question or input to be sent to the LLM.
                  example: "Dame una pista para esta pregunta"
                model:
                  type: string
                  description: The LLM model to be used for generating the response.
                  example: "gemini"
                mode:
                  type: string
                  description: The game mode or context for the hint generation.
                  example: "Banderas"
                resCorr:
                  type: string
                  description: The correct answer for which the hint should be generated.
                  example: "Argentina"
                language:
                  type: string
                  description: The language in which the hint should be generated.
                  example: "es"
                version:
                  type: string
                  description: The version of the LLM to be used.
                  example: "pregunta"
      responses:
        '200':
          description: Hint generated successfully by the LLM.
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: The hint generated by the LLM.
                    example: "Este país tuvo el primer ferrocarril de su continente."
        '400':
          description: Bad request. Missing required fields or invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "API key is missing"
        '500':
          description: Internal server error. An error occurred while processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Internal server error"
  /questions/:kind:
    post:
      summary: Retrieves a question and its possible answers based on the specified kind.
      operationId: getQuestionsByKind
      parameters:
        - name: kind
          in: path
          required: true
          schema:
            type: string
          description: >
            The type of question to retrieve. Possible values include "city", "flag", "music", "food" or "football".
          example: flag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  description: The language in which the question should be generated.
                  example: es
                numQuestions:
                  type: number
                  description: The number of questions to retrieve.
                  example: 5
      responses:
        '200':
          description: Question retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  question:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: Question ID.
                        example: 67e4a171206740a957c5988e
                      question:
                        type: string
                        description: The question text.
                        example: "¿Qué país tiene esta bandera?"
                      image:
                        type: string
                        description: URL of the image associated with the question.
                        example: "https://example.com/flag.jpg"
                      answer:
                        type: string
                        description: The correct answer to the question.
                        example: "Argentina"
                      wrongAnswers:
                        type: array
                        items:
                          type: string
                        description: A list of incorrect answers.
                        example: ["Brasil", "Chile", "Uruguay"]
        '400':
          description: Bad request. The query could not be processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Invalid query parameters."
        '500':
          description: Internal server error. An error occurred while processing the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: "Internal server error"
  /gethistory/:username:
    get:
      summary: Retrieves the contest history of a specific user.
      operationId: getUserHistory
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: The username of the user whose contest history is being retrieved.
          example: student
      responses:
        '200':
          description: User contest history retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contests:
                    type: array
                    description: List of contests associated with the user.
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Contest ID.
                          example: 65f756db3fa22d227a4b7c7d
                        difficulty:
                          type: string
                          description: Difficulty of the game.
                          example: 'easy'
                        mode:
                          type: string
                          description: Mode of the game.
                          example: 'flag'
                        rightAnswers:
                          type: array
                          description: Array which contains if the answer was answered correctly or not for every question included in the game.
                          items:
                            type: boolean
                          example: [true, false, true, true, false]
                        points:
                          type: integer
                          description: Points gained in the game.
                          example: 500
                        preguntas:
                          type: array
                          description: Array which contains the ids of the questions included in the game.
                          items:
                            type: string
                          example: ['67e4a171206740a957c5988e','67e4a171206740a957c59890','67e4a171206740a957c59892']
                        tiempos:
                          type: array
                          description: Array which contains the time taken to answer each question.
                          items:
                            type: integer
                          example: [2, 4, 7, 1, 3]
                        pistas:
                          type: array
                          description: Array which contains the number of hints used in each question.
                          items:
                            type: integer
                          example: [0, 1, 0, 2, 0]
                        date:
                          type: string
                          description: Date of the contest.
                          example: '2025-03-27T00:53:05.578+00:00'
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: User not found
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Internal server error
  /getranking:
    get:
      summary: Retrieves the ranking of all users sorted by points.
      operationId: getRanking
      responses:
        '200':
          description: Ranking retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    description: List of users sorted by points.
                    items:
                      type: object
                      properties:
                        username:
                          type: string
                          description: Username of the user.
                          example: student
                        points:
                          type: integer
                          description: Total points of the user.
                          example: 500
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message.
                    example: Internal server error